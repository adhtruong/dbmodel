# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v02
    - name: Install Flit
      if: steps.cache.outputs.cache-hit != 'true'
      run: pip install flit
    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: flit install --symlink --dep all
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Run pre-commits
      run: |
        pre-commit run -a
    - name: Test with pytest
      run: |
        pytest
      env:
        COVERAGE_FILE: .coverage.${{ env.PY }}
    - name: Upload coverage data
      uses: actions/upload-artifact@v3
      with:
        name: coverage-data
        path: .coverage.*

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: python -m pip install --upgrade coverage[toml]

    - name: Download data
      uses: actions/download-artifact@v3
      with:
        name: coverage-data

    - name: Combine coverage and fail if it's <100%
      run: |
        python -m coverage combine
        python -m coverage html
        python -m coverage report
    - name: Upload HTML report
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: html-report
        path: htmlcov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
